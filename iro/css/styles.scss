@use "sass:math";
// 数値のみを取り出す
// 参照：https://css-tricks.com/snippets/sass/strip-unit-function/
@function strip-unit($number) {
    @if type-of($number) == "number" and not unitless($number) {
        @return math.div($number, $number * 0 + 1);
    }
    @return $number;
}
@function vw($window_width, $size) {
    @return math.div($size, $window_width) * 100vw;
}
// ================================================
// インナー幅の設定
// ================================================

// コンテンツのインナー幅（Webサイトで一番多いインナー幅で設定）
$inner: 1080px;
// ↑この数字はコーディングするデザインによって書き換えてください

// 余白設定
// PC時の余白はデザインに応じたものではなく、最低取っておいた方が良い余白
$padding-pc: 25px;
// SP時はデザインカンプに沿って書き換えてください
$padding-sp: 29px;

// ================================================
// 色に関する設定
// ================================================

//色指定（デザインを見てよく使う色は設定！）
$c-black: #333333;
$c-white: #fff;
$c-base:#f6f4ee;
$c-main: #242e43;
$c-sub:#ecc96b;

body {
 // このサイトの基本的な文字色
  color: $c-black;
  // このサイトの基本的な背景色
  background-color: $c-base;
}

// ================================================
// フォントについての設定
// ================================================
$base-font:'Noto Sans JP', sans-serif;
$second-font:'Montserrat', sans-serif;

body {
    // このサイトの基本フォント
    font-family: $base-font;
}
// フォントウェイト
$regular: 300;
$normal: 400;
$bold: 700;

// ================================================
// メディアクエリとブレークポイントの設定
// ================================================
//ブレイクポイント(デザインによって異なる)
$breakpoints: (
    sm: 550,
    md: 780,
    lg: 1200,
    xl: 1400,
);

//メディアクエリー
$mediaquerys: (
    sm: "screen and (min-width: #{map-get($breakpoints,'sm')}px)",
    md: "screen and (min-width: #{map-get($breakpoints,'md')}px)",
    lg: "screen and (min-width: #{map-get($breakpoints,'lg')}px)",
    xl: "screen and (min-width: #{map-get($breakpoints,'xl')}px)",
);

// @include mq(){}で書くとブレークポイントが反映される（初期値はmd）
@mixin mq($mediaquery: md) {
    @media #{map-get($mediaquerys, $mediaquery)} {
        @content;
    }
}
/*  PCとSPの表示非表示の切り替え */
/*(md)px以上で表示*/
.pc_only {
    display: none;
    @include mq("md") {
        display: block;
    }
}


/*モバイルのみ表示*/
.sp_only {
    @include mq("md") {
        display: none;
    }
}

// ================================================
// remへ変換
// ================================================
// remへの計算式（16pxを基準としている。10pxを基準とする場合は16を10に変更する）
@function rem($pixels) {
    @return math.div($pixels, 16) * 1rem;
}

/* リキッドレイアウト対応のための設定 */
html {
    //~375px
    @media (max-width: 375px) {
        font-size: vw(375, 16);
    }

    //375px~787px
    font-size: 16px;

    @include mq("md") {
        font-size: vw(strip-unit($inner), 16);
    }

    //inner~max-screen
    @media (min-width: $inner) {
        font-size: 16px;
    }
}

/*画像の縦横比設定*/
img {
    width: 100%;
    height: auto;
    display: block;
}

/* aタグのスタイルリセット*/
a {
    text-decoration: none;
}
a:hover {
    opacity: 0.8;
}

/*インナー幅用の基本CSS*/
.inner {
    max-width: rem(480);
    width: 100%;
    padding-right: $padding-sp;
    padding-left: $padding-sp;
    margin-right: auto;
    margin-left: auto;
    @include mq("md") {
        max-width: $inner + $padding-pc * 2;
        padding-right: $padding-pc;
        padding-left: $padding-pc;
    }
}
/* ================================================
   cssここから書く
================================================ */
.btn{
    width: 240px;
    height: 60px;
}